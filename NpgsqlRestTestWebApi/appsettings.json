{
  "ApplicationName": null,
  "EnvironmentName": "Production",
  "Urls": "http://localhost:5001",

  "ConnectionStrings": {
    /*
    * See https://www.npgsql.org/doc/connection-string-parameters.html
    */
    "Default": "Host=127.0.0.1;Port=5432;Database=test;Username=postgres;Password=postgres"
  },

  "Auth": {
    "CookieAuth": true,
    "CookieAuthScheme": null,
    "CookieValidDays": 30,
    "CookieName": null,
    "CookiePath": null,
    "CookieDomain": null,
    "CookieMultiSessions": true,
    "CookieHttpOnly": true,

    "BearerTokenAuth": true,
    "BearerTokenAuthScheme": null,
    "BearerTokenExpireHours": 1,
    "BearerRefreshTokenExpireDays": 14
  },

  "Log": {
    /*
    * See https://github.com/serilog/serilog/wiki/Configuration-Basics#minimum-level
    */
    "MinimalLevels": {
      "System": "Warning",
      "Microsoft": "Warning"
    },
    "ToConsole": true,
    "ToFile": false,
    "FilePath": "logs/log.txt",
    "FileSizeLimitBytes": 30000000,
    "RetainedFileCountLimit": 30,
    "RollOnFileSizeLimit": true,
    /*
    * See https://github.com/serilog/serilog/wiki/Formatting-Output
    */
    "OutputTemplate": "[{Timestamp:HH:mm:ss.fff} {Level:u3}] {Message:lj} [{SourceContext}]{NewLine}{Exception}"
  },

  "StaticFiles": {
    "Enabled": false,
    "RootPath": "wwwroot",
    "AnonymousPaths": [ "/login/" ],
    "LoginRedirectPath": "/login/"
  },

  "Cors": {
    "Enabled": false,
    "AllowedOrigins": [],
    "AllowedMethods": [ "*" ],
    "AllowedHeaders": [ "*" ]
  },

  "NpgsqlRest": {
    /*
    * Connection name to be used from the ConnectionStrings section or NULL to use the first avaialable connection string.
    */
    "ConnectionName": null,
    /*
    * Sets the ApplicationName connection property in the connection string to the value of the ApplicationName configuration.
    * Note: This option is ignored if the UseJsonApplicationName option is enabled.
    */
    "SetApplicationNameInConnection": true,
    /*
    * Sets the ApplicationName connection property dynamically on every request in the following format: 
    * {"app": [Application Name], "uid": [User Id for authenticated users or NULL], "id": [Valud of X-Execution-Id request header or NULL]}
    * Note: ApplicationName connection property is limited to 64 characters.
    */
    "UseJsonApplicationName": true,

    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#schemasimilarto
    */
    "SchemaSimilarTo": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#schemanotsimilarto
    */
    "SchemaNotSimilarTo": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#includeschemas
    */
    "IncludeSchemas": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#excludeschemas
    */
    "ExcludeSchemas": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#namesimilarto
    */
    "NameSimilarTo": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#namenotsimilarto
    */
    "NameNotSimilarTo": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#includenames
    */
    "IncludeNames": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#excludenames
    */
    "ExcludeNames": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#commentsmode
    */
    "CommentsMode": "ParseAll",

    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#urlpathprefix
    */
    "UrlPathPrefix": "/api",
    /*
    * Convert all URL paths to kebab-case from the original PostgreSQL names.
    */
    "KebabCaseUrls": true,
    /*
    * Convert all parameter names to camel case from the original PostgreSQL paramater names.
    */
    "CamelCaseNames": true,
    /*
    * Set to true to force all created endpoints to require authorization.
    * See https://vb-consulting.github.io/npgsqlrest/options/#requiresauthorization
    */
    "RequiresAuthorization": true,

    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#logendpointcreatedinfo
    */
    "LogEndpointCreatedInfo": true,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#logannotationsetinfo
    */
    "LogAnnotationSetInfo": true,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#logconnectionnoticeevents
    */
    "LogConnectionNoticeEvents": true,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#logcommands
    */
    "LogCommands": false,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#logcommandparameters
    */
    "LogCommandParameters": false,

    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#commandtimeout
    */
    "CommandTimeout": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#defaulthttpmethod
    */
    "DefaultHttpMethod": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#defaultrequestparamtype
    */
    "DefaultRequestParamType": null,
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#requestheadersmode
    */
    "RequestHeadersMode": "Ignore",
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#requestheadersparametername
    */
    "RequestHeadersParameterName": "headers",
    /*
    * See https://vb-consulting.github.io/npgsqlrest/options/#returnnpgsqlexceptionmessage
    */
    "ReturnNpgsqlExceptionMessage": true,
    /*
    * https://vb-consulting.github.io/npgsqlrest/options/#postgresqlerrorcodetohttpstatuscodemapping
    */
    "PostgreSqlErrorCodeToHttpStatusCodeMapping": {
      "57014": 205
    },

    "AuthenticationOptions": {
      /*
      * Url path that will be used for the login endpoint. If NULL, the login endpoint will not be created.
      * See more on login endpoints at https://vb-consulting.github.io/npgsqlrest/annotations/#login
      */
      "LoginPath": null,
      /*
      * Url path that will be used for the logout endpoint. If NULL, the logout endpoint will not be created.
      * See more on logout endpoints at https://vb-consulting.github.io/npgsqlrest/annotations/#logout
      */
      "LogoutPath": null,
      /*
      * See https://vb-consulting.github.io/npgsqlrest/options/#authenticationoptionsdefaultauthenticationtype
      * (Default value is set from the ApplicationName configuration property)
      */
      "DefaultAuthenticationType": null,
      /*
      * Name of the PostgreSQL text parameter that will be used to pass the authenticated user id to the PostgreSQL routine (function  or query) automatically (supplied values are rewritten).
      */
      "UserIdParameterName": null,
      /*
      * Name of the PostgreSQL text parameter that will be used to pass the authenticated user name to the PostgreSQL routine (function  or query) automatically (supplied values are rewritten).
      */
      "UserNameParameterName": null,
      /*
      * Name of the PostgreSQL text array parameter that will be used to pass the authenticated user roles list to the PostgreSQL routine (function  or query) automatically (supplied values are rewritten).
      */
      "UserRolesParameterName": null
    },

    "HttpFileOptions": {
      /*
      * Enable or disable the generation of HTTP files.
      * See more on HTTP files at: 
      * https://marketplace.visualstudio.com/items?itemName=humao.rest-client or 
      * https://learn.microsoft.com/en-us/aspnet/core/test/http-files?view=aspnetcore-8.0
      */
      "Enabled": false,
      /*
      * Options for HTTP file generation:
      * - File: Generate HTTP files in the file system.
      * - Endpoint: Generate Endpoint(s) with HTTP file(s) content.
      * - Both: Generate HTTP files in the file system and Endpoint(s) with HTTP file(s) content.
      */
      "Option": "File",
      /*
      * File name. If not set, the database name will be used if connection string is set. 
      * If neither ConnectionString nor Name is set, the file name will be "npgsqlrest".
      */
      "Name": null,
      /*
      * The pattern to use when generating file names. {0} is database name, {1} is schema suffix with underline when FileMode is set to Schema.
      * Use this property to set the custom file name.
      * .http extension will be added automatically.
      */
      "NamePattern": "{0}_{1}",
      /*
      * Adds comment header to above request based on PostgreSQL routine.
      * - None: skip.
      * - Simple: Add name, parameters and return values to comment header. This default.
      * - Full: Add the entire routine code as comment header.
      */
      "CommentHeader": "Simple",
      /*
      * When CommentHeader is set to Simple or Full, set to true to include routine comments in comment header.
      */
      "CommentHeaderIncludeComments": true,
      /*
      * - Database: to create one http file for entire database.
      * - Schema: to create one http file for each schema.
      */
      "FileMode": "Schema",
      /*
      * Set to true to overwrite existing files.
      */
      "FileOverwrite": true
    },

    "TsClient": {
      /*
      * Enable or disable the generation of TypeScript client source code files.
      */
      "Enabled": false,
      /*
      * File path for the generated code. Set to null to skip the code generation. Use {0} to set schema name when BySchema is true
      */
      "FilePath": null,
      /*
      *  Force file overwrite.
      */
      "FileOverwrite": true,
      /*
      * Include current host information in the URL prefix.
      */
      "IncludeHost": true,
      /*
      * Set the custom host prefix information.
      */
      "CustomHost": null,
      /*
      * Adds comment header to above request based on PostgreSQL routine
      * Set None to skip.
      * Set Simple (default) to add name, parameters and return values to comment header.
      * Set Full to add the entire routine code as comment header.
      */
      "CommentHeader": "Simple",
      /*
      * When CommentHeader is set to Simple or Full, set to true to include routine comments in comment header.
      */
      "CommentHeaderIncludeComments": true,
      /*
      * Create files by PostgreSQL schema. File name will use formatted FilePath where {0} is is the schema name in the pascal case.
      */
      "BySchema": true,
      /*
      * Set to true to include status code in response: {status: response.status, response: model}
      */
      "IncludeStatusCode": true,
      /*
      * Create separate file with global types {name}Types.d.ts
      */
      "CreateSeparateTypeFile": true,
      /*
      * Module name to import "baseUrl" constant, instead of defining it in a module.
      */
      "ImportBaseUrlFrom": null,
      /*
      * Module name to import "pasreQuery" function, instead of defining it in a module.
      */
      "ImportParseQueryFrom": null,
      /*
      * Include optional parameter `parseUrl: (url: string) => string = url=>url` that will parse constructed url.
      */
      "IncludeParseUrlParam": false,
      /*
      * Include optional parameter `parseRequest: (request: RequestInit) => RequestInit = request=>request` that will parse constructed request.
      */
      "IncludeParseRequestParam": false
    },

    "RoutinesSource": {
      /*
      * Enable or disable the creation of the endpoints for the PostgreSQL routines (functions and procedures).
      */
      "Enabled": true,
      /*
      * Override the default SchemaSimilarTo option for the RoutinesSource.
      */
      "SchemaSimilarTo": null,
      /*
      * Override the default SchemaNotSimilarTo option for the RoutinesSource.
      */
      "SchemaNotSimilarTo": null,
      /*
      * Override the default IncludeSchemas option for the RoutinesSource.
      */
      "IncludeSchemas": null,
      /*
      * Override the default ExcludeSchemas option for the RoutinesSource.
      */
      "ExcludeSchemas": null,
      /*
      * Override the default NameSimilarTo option for the RoutinesSource.
      */
      "NameSimilarTo": null,
      /*
      * Override the default NameNotSimilarTo option for the RoutinesSource.
      */
      "NameNotSimilarTo": null,
      /*
      * Override the default IncludeNames option for the RoutinesSource.
      */
      "IncludeNames": null,
      /*
      * Override the default ExcludeNames option for the RoutinesSource.
      */
      "ExcludeNames": null,
      /*
      * Override the default CommentsMode option for the RoutinesSource.
      */
      "CommentsMode": null,
      /*
      * Provide a custom query or a function name to select the routines information metadata or null to use the default query.
      * See the default query: https://github.com/vb-consulting/NpgsqlRest/blob/master/NpgsqlRest/RoutineSourceQuery.cs
      */
      "Query": null
    },

    "CrudSource": {
      /*
      * Enable or disable the creation of the endpoints for the PostgreSQL tables and views.
      */
      "Enabled": true,
      /*
      * Override the default SchemaSimilarTo option for the CrudSource.
      */
      "SchemaSimilarTo": null,
      /*
      * Override the default SchemaNotSimilarTo option for the CrudSource.
      */
      "SchemaNotSimilarTo": null,
      /*
      * Override the default IncludeSchemas option for the CrudSource.
      */
      "IncludeSchemas": null,
      /*
      * Override the default ExcludeSchemas option for the CrudSource.
      */
      "ExcludeSchemas": null,
      /*
      * Override the default NameSimilarTo option for the CrudSource.
      */
      "NameSimilarTo": null,
      /*
      * Override the default NameNotSimilarTo option for the CrudSource.
      */
      "NameNotSimilarTo": null,
      /*
      * Override the default IncludeNames option for the CrudSource.
      */
      "IncludeNames": null,
      /*
      * Override the default ExcludeNames option for the CrudSource.
      */
      "ExcludeNames": null,
      /*
      * Override the default CommentsMode option for the CrudSource.
      */
      "CommentsMode": null,
      /*
      * Provide a custom query or a function name to select the tables and views information metadata or null to use the default query.
      * See the default query: https://github.com/vb-consulting/NpgsqlRest/blob/master/plugins/NpgsqlRest.CrudSource/CrudSourceQuery.cs
      */
      "Query": null,
      /*
      * Set of flags to enable or disable the creation of the CRUD endpoints for the specific types of the PostgreSQL tables and views. 
      * Possible values are: 
      * Select, Update, UpdateReturning, Insert, InsertReturning, InsertOnConflictDoNothing, InsertOnConflictDoUpdate, InsertOnConflictDoNothingReturning, 
      * InsertOnConflictDoUpdateReturning, Delete, DeleteReturning, All
      */
      "CrudTypes": [ "All" ]
    }
  }
}
