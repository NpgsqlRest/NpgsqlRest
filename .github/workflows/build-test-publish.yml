name: Build, Test, Publish and Release

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build-test-publish:
    runs-on: ubuntu-latest
    steps:
    - name: Install PosgtreSQL
      uses: vb-consulting/postgresql-action@v1
      with:
        postgresql version: '17'
        postgresql user: 'postgres'
        postgresql password: 'postgres'
    - uses: actions/checkout@v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: dotnet test --no-restore --verbosity m
    - name: Publish
      run: dotnet nuget push **\*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate

  create-release:
    needs: build-test-publish
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v2.23.0-client-v2.18.0
        release_name: "AOT Client v2.18.0 NpgsqlRest v2.23.0"
        draft: true
        prerelease: true

  upload-assets:
    needs: create-release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Upload appsettings.json to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/appsettings.json
        asset_name: appsettings.json
        asset_content_type: application/json

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Build Windows AOT
      run: dotnet publish ./NpgsqlRestClient/NpgsqlRestClient.csproj -r win-x64 -c Release
    - name: Upload Windows executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/bin/Release/net9.0/win-x64/publish/NpgsqlRestClient.exe
        asset_name: npgsqlrest-win64.exe
        asset_content_type: application/octet-stream

  build-linux:
    needs: create-release
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Build Linux AOT
      run: dotnet publish ./NpgsqlRestClient/NpgsqlRestClient.csproj -r linux-x64 -c Release
    - name: Upload Linux executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/bin/Release/net9.0/linux-x64/publish/NpgsqlRestClient
        asset_name: npgsqlrest-linux64
        asset_content_type: application/octet-stream

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET9
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 9.0.x
    - name: Build macOS AOT
      run: dotnet publish ./NpgsqlRestClient/NpgsqlRestClient.csproj -r osx-x64 -c Release
    - name: Upload macOS executable
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./NpgsqlRestClient/bin/Release/net9.0/osx-x64/publish/NpgsqlRestClient
        asset_name: npgsqlrest-osx64
        asset_content_type: application/octet-stream